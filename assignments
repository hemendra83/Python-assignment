#Write a program which will find all such numbers which are divisible by 7 but are not a multiple of 5, between 2000 and 3200 (both included).
l = list(range(2000, 3201))
l1 =[]
for i in l:
    if (i%7==0) and (i%5!=0):
        l1.append(str(i))
print(','.join(l1))

#Write a Python program to accept the user's first and last name and then getting them printed in the the reverse order with a space between first name and last name.
a = input( "first name:" )
b = input( "last name" )

print("{}" " " "{}".format(b,a))

#Write a Python program to find the volume of a sphere with diameter 12 cm.Formula: V=4/3 * Ï€ * r 3
pi = 3.14
diameter = 12
radius = diameter/2
volume = (4/3)*pi*radius**3
print(volume)

#Create the below pattern using nested for loop in Python.
*
* *
* * *
* * * *
* * * * *
* * * *
* * *
* *
*
n = 5
for i in range(n):
    for j in range(i+1):
        print('*',end=' ')
    print()
n = 4
for i in range(n):
    for j in range(i,n):
        print('*',end=' ')
    print()
    
#Write a Python program to reverse a word after accepting the input from the user.
a = input()[::-1]
print(a)

#Write a Python Program to implement your own myreduce() function which works exactly
like Python's built-in function reduce()
def myreduce(values):
    result=values[0]
    for i in values[1:]:
        result = func(result,i)
    return result   
def func(a,b):
    return a+b
    
#Write a Python program to implement your own myfilter() function which works exactly
like Python's built-in function filter()
def myfilter(values):
    result=[]
    for i in values:
        if func(i):
            result.append(i)
    return result
def func(y):
    if y%2 ==0:
        return True
    else:
        return false
        
#Implement List comprehensions to produce the following lists. 
#1['x', 'xx', 'xxx', 'xxxx', 'y', 'yy', 'yyy', 'yyyy', 'z', 'zz', 'zzz', 'zzzz'] 
l1=["x","y", "z"]
lst1=[i*j for j in l1 for i in range(1,5)]

#2['x', 'y', 'z', 'xx', 'yy', 'zz', 'xxx', 'yyy', 'zzz', 'xxxx', 'yyyy', 'zzzz'] 
l1=["x","y", "z"]
lst1=[i*j for j in range(1,5) for i in l1]

#3[[2], [3], [4], [3], [4], [5], [4], [5], [6]]
l1= range(2,5)
lst1=[[i+j] for i in l1 for j in range(3) ]

#4 [[2, 3, 4, 5], [3, 4, 5, 6],[4, 5, 6, 7], [5, 6, 7, 8]]
lst1=[[i+j for i in range(2,6)] for j in range (0,4)]

#5[(1, 1), (2, 1), (3, 1), (1, 2), (2, 2), (3, 2), (1, 3), (2, 3), (3, 3)]
lst1=[(i,j) for j in range(1,4) for i in range (1,4)]
   
    
